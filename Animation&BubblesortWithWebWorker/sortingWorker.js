/*Этот код представляет воркер, который выполняет сортировку пузырьком 
для неотсортированного массива, полученного из основного потока. 
Копия массива создается перед сортировкой, чтобы избежать изменений в оригинальном массиве. 
Отсортированный массив затем отправляется обратно в основной поток.*/


// Обработчик сообщения от основного потока
onmessage = function (e) {
    // Получаем неотсортированный массив из сообщения
    const unsortedArray = e.data;

    // Создаем копию массива для избежания мутаций (создания изменяемой копии)
    let sortedArray = bubbleSort([...unsortedArray]);

    // Отправляем сообщение с неотсортированным и отсортированным массивами обратно в основной поток
    postMessage({ unsortedArray, sortedArray });
};

// Функция сортировки пузырьком
function bubbleSort(arr) {
    const len = arr.length;

    // Внешний цикл - проходы по массиву
    for (let i = 0; i < len; i++) {
        // Внутренний цикл - сравнение и обмен элементов
        for (let j = 0; j < len - 1 - i; j++) {
            // Если текущий элемент больше следующего, меняем их местами
            if (arr[j] > arr[j + 1]) {
                [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];
            }
        }
    }

    // Возвращаем отсортированный массив
    return arr;
}

