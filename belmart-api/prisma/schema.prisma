// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EnumUserRoles {
  USER
  ADMIN
}

model User {
  id Int @id @default(autoincrement())

  email    String @unique
  password String

  role EnumUserRoles @default(USER)

  first_name String? @default("")
  last_name  String? @default("")

  phone String @default("")

  orders Order[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Product {
  id               Int         @id @default(autoincrement())
  title            String      @unique
  description      String?
  price            Float
  image_url        String[]
  available_amount Int         @default(0)
  orderItem        OrderItem[]
  createdAt        DateTime    @default(now()) @map("created_at")
  updatedAt        DateTime    @updatedAt @map("updated_at")
}

enum EnumOrderStatus {
  IN_CART
  COMPLETED
  CANCELED
}

model Order {
  id          Int             @id @default(autoincrement())
  status      EnumOrderStatus @default(IN_CART)
  totalAmount Float           @default(0)
  orderItems  OrderItem[]
  user        User?           @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId      Int?            @map("user_id")
  createdAt   DateTime        @default(now()) @map("created_at")
  updatedAt   DateTime        @updatedAt @map("updated_at")
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  quantity  Int
  price     Float
  order     Order?   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   Int?     @map("order_id")
  product   Product? @relation(fields: [productId], references: [id], onDelete: SetNull)
  productId Int?     @map("product_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("Order_item")
}
